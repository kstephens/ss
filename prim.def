ss_prim_def(AND,2,2,1,"&" " i j")
ss_prim_def(EQ,2,2,1,"==" " x y")
ss_prim_def(GE,2,2,1,">=" " x y")
ss_prim_def(GT,2,2,1,">" " x y")
ss_prim_def(INV,1,1,1,"~" " i")
ss_prim_def(LE,2,2,1,"<=" " x y")
ss_prim_def(LSH,2,2,1,"<<" " i j")
ss_prim_def(LT,2,2,1,"<" " x y")
ss_prim_def(MOD,2,2,1,"%" " i j")
ss_prim_def(NE,2,2,1,"!=" " x y")
ss_prim_def(NEG,1,1,1,"-" " z")
ss_prim_def(NOT,1,1,1,"!" " z")
ss_prim_def(OR,2,2,1,"|" " i j")
ss_prim_def(RSH,2,2,1,">>" " i j")
ss_prim_def(XOR,2,2,1,"^" " i j")
ss_prim_def(_ADD,2,2,1,"+" " z...")
ss_prim_def(_DIV,2,2,1,"/" " z...")
ss_prim_def(_MUL,2,2,1,"*" " z...")
ss_prim_def(_SUB,2,2,1,"-" " z...")
ss_prim_def(_define,2,2,0,"define name value")
ss_prim_def(apply,2,2,1,"apply func args")
ss_prim_def(car,1,1,1,"car pair")
ss_prim_def(cdr,1,1,1,"cdr pair")
ss_prim_def(cons,2,2,1,"cons car cdr")
ss_prim_def(newline,0,1,1,"newline")
ss_prim_def(read,0,1,1,"_read port")
ss_prim_def(setE,2,2,0,"set! name value")
ss_prim_def(ss_call_cfunc,0,5,1,"call cfunc")
ss_prim_def(ss_symbols,0,0,0,"")
ss_prim_def(ss_syn_ADD,0,-1,1,"+ z...")
ss_prim_def(ss_syn_DIV,1,-1,1,"/ z...")
ss_prim_def(ss_syn_MUL,0,-1,1,"* z...")
ss_prim_def(ss_syn_SUB,1,-1,1,"- z...")
ss_prim_def(ss_syn_define,1,-1,1,"define name value")
ss_prim_def(ss_syn_if,2,3,1,"if pred true ?false?")
ss_prim_def(ss_syn_lambda,1,-1,1,"lambda formals body...")
ss_prim_def(ss_syn_let,1,-1,1,"let bindings body...")
ss_prim_def(ss_syn_quote,1,1,1,"quote value")
ss_prim_def(write,1,2,1,"write object")
#undef ss_prim_def
