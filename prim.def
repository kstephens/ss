ss_prim_def(ss_t_prim,NEG,1,1,1,"-" " z")
ss_prim_def(ss_t_prim,NOT,1,1,1,"!" " z")
ss_prim_def(ss_t_prim,_ADD,2,2,1,"+" " z...")
ss_prim_def(ss_t_prim,_DIV,2,2,1,"/" " z...")
ss_prim_def(ss_t_prim,_MUL,2,2,1,"*" " z...")
ss_prim_def(ss_t_prim,_SUB,2,2,1,"-" " z...")
ss_prim_def(ss_t_prim,_if,3,3,0,"if pred true ?false?")
ss_prim_def(ss_t_prim,_read,1,1,1,"_read port")
ss_prim_def(ss_t_prim,car,1,1,1,"car pair")
ss_prim_def(ss_t_prim,cdr,1,1,1,"cdr pair")
ss_prim_def(ss_t_prim,cons,2,2,1,"cons car cdr")
ss_prim_def(ss_t_prim,define,2,2,0,"define name value")
ss_prim_def(ss_t_prim,newline,0,0,0,"newline")
ss_prim_def(ss_t_prim,setE,2,2,0,"set! name value")
ss_prim_def(ss_t_prim,write,1,1,1,"write object")
ss_prim_def(ss_t_syntax,ADD,0,-1,0,"+ z...")
ss_prim_def(ss_t_syntax,DIV,1,-1,0,"/ z...")
ss_prim_def(ss_t_syntax,MUL,0,-1,0,"* z...")
ss_prim_def(ss_t_syntax,SUB,1,-1,0,"- z...")
ss_prim_def(ss_t_syntax,if,2,3,1,"if pred true ?false?")
ss_prim_def(ss_t_syntax,lambda,1,-1,0,"lambda formals body...")
ss_prim_def(ss_t_syntax,let,1,-1,0,"let bindings body...")
ss_prim_def(ss_t_syntax,quote,1,1,0,"quote value")
#undef ss_prim_def
